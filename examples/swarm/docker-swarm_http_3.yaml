version: '3.9'

services:
  gateway:
    # Traefik v2.5
    image: traefik:v2.5.2
    # Configuration
    command:
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.useBindPortIP=true"
      - "--providers.docker.network=proxy"
      - "--entryPoints.http1.address=:80"
      - "--serversTransport.insecureSkipVerify=true"
      - "--entryPoints.h3-persistence.address=:4431/udp"
      - "--entryPoints.h3-auth.address=:4432/udp"
      - "--entryPoints.h3-web.address=:4433/udp"
      - "--entryPoints.h3-image.address=:4434/udp"
      - "--entryPoints.h3-recommender.address=:4435/udp"
    networks:
      - proxy
    ports:
      # The HTTP port
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      # The HTTP/3 ports
      - target: 4431
        published: 4431
        protocol: udp
        mode: host
      - target: 4432
        published: 4432
        protocol: udp
        mode: host
      - target: 4433
        published: 4433
        protocol: udp
        mode: host
      - target: 4434
        published: 4434
        protocol: udp
        mode: host
      - target: 4435
        published: 4435
        protocol: udp
        mode: host
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
  db:
    image: tvsjsdock/teastore-db:v2
    networks:
      - proxy
    ports:
      - "3306:3306"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==worker"
      labels:
        - "traefik.enable=false"
  persistence:
    image: tvsjsdock/teastore-persistence:v2
    depends_on:
      - db
    networks:
      - proxy
    environment:
      HTTP_VERSION: "HTTP/3"
      HOST_NAME: "persistence"
      GATEWAY_HOST: "gateway"
      PERSISTENCE_PORT: "4431"
      DB_HOST: "db"
      DB_PORT: "3306"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==worker"
      labels:
        - "traefik.udp.routers.persistence.entrypoints=h3-persistence"
        - "traefik.udp.routers.persistence.service=persistence"
        - "traefik.udp.services.persistence.loadbalancer.server.port=4431"
  auth:
    image: tvsjsdock/teastore-auth:v2
    depends_on:
      - persistence
    networks:
      - proxy
    environment:
      HTTP_VERSION: "HTTP/3"
      HOST_NAME: "auth"
      GATEWAY_HOST: "gateway"
      PERSISTENCE_PORT: "4431"
      AUTH_PORT: "4432"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==worker"
      labels:
        - "traefik.udp.routers.auth.entrypoints=h3-auth"
        - "traefik.udp.routers.auth.service=auth"
        - "traefik.udp.services.auth.loadbalancer.server.port=4432"
  web:
    image: tvsjsdock/teastore-web:v2
    depends_on:
      - auth
    networks:
      - proxy
    environment:
      HTTP_VERSION: "HTTP/3"
      HOST_NAME: "web"
      GATEWAY_HOST: "gateway"
      PERSISTENCE_PORT: "4431"
      AUTH_PORT: "4432"
      WEB_PORT: "80"
      IMAGE_PORT: "4434"
      RECOMMENDER_PORT: "4435"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==worker"
      labels:
        - "traefik.http.routers.web.rule=Host(`localhost`) && PathPrefix(`/api/web`)"
        - "traefik.http.routers.web.entrypoints=http1"
        - "traefik.http.routers.web.tls=false"
        - "traefik.http.routers.web.service=web"
        - "traefik.http.services.web.loadbalancer.server.port=80"
        - "traefik.http.services.web.loadbalancer.server.scheme=http"
  image:
    image: tvsjsdock/teastore-image:v2
    depends_on:
      - persistence
    networks:
      - proxy
    environment:
      HTTP_VERSION: "HTTP/3"
      HOST_NAME: "image"
      GATEWAY_HOST: "gateway"
      PERSISTENCE_PORT: "4431"
      IMAGE_PORT: "4434"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==worker"
      labels:
        - "traefik.udp.routers.image.entrypoints=h3-image"
        - "traefik.udp.routers.image.service=image"
        - "traefik.udp.services.image.loadbalancer.server.port=4434"
  recommender:
    image: tvsjsdock/teastore-recommender:v2
    depends_on:
      - persistence
    networks:
      - proxy
    environment:
      HTTP_VERSION: "HTTP/3"
      HOST_NAME: "recommender"
      GATEWAY_HOST: "gateway"
      PERSISTENCE_PORT: "4431"
      RECOMMENDER_PORT: "4435"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==worker"
      labels:
        - "traefik.udp.routers.recommender.entrypoints=h3-recommender"
        - "traefik.udp.routers.recommender.service=recommender"
        - "traefik.udp.services.recommender.loadbalancer.server.port=4435"

networks:
  proxy:
    driver: overlay
    name: proxy